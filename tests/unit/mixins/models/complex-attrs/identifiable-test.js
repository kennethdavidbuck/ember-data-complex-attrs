import ModelsComplexAttrsIdentifiableMixin from '@rigo/ember-data-complex-attrs/mixins/models/complex-attrs/identifiable';
import ComplexAttr from '@rigo/ember-data-complex-attrs/models/complex-attrs/complex-attr';
import { module, test } from 'qunit';
import {isPresent} from '@ember/utils';

module('Unit | Mixin | models/complex attrs/identifiable');

let ModelsComplexAttrsIdentifiableObject = ComplexAttr.extend(ModelsComplexAttrsIdentifiableMixin);

test('it has an autogenerated id', function(assert) {
  assert.expect(1);

  let subject = ModelsComplexAttrsIdentifiableObject.create();

  assert.ok(isPresent(subject.get('id')), 'it should have an id');
});

test('id is not copyable (deep)', function (assert) {
  assert.expect(1);

  let subject = ModelsComplexAttrsIdentifiableObject.create();

  let copied = subject.copy();

  assert.notEqual(subject.get('id'), copied.get('id'), 'should be different ids');
});

test('id is not copyable (shallow)', function (assert) {
  assert.expect(1);

  let subject = ModelsComplexAttrsIdentifiableObject.create();

  let copied = subject.copy();

  assert.notEqual(subject.get('id'), copied.get('id'), 'should be different ids');
});
